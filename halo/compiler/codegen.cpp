/**@file
 * Code Generator.
 *
 * Copyright Igor Lesik 2011.
 * License:   Distributed under the Boost Software License, Version 1.0.
 *            (See http://www.boost.org/LICENSE_1_0.txt)
 *
 */
#include "codegen.h"

#include <assert.h>

#include "ast.h"
#include "debug.h"

#ifdef NDEBUG
    static inline void debug(uint64_t, const char*, ...) {}
#else
    #define debug(flags, frmt, ...)\
        debugModule(Dbg::CODEGEN | flags, "codegen", frmt, ##__VA_ARGS__)
#endif


/// Print out generated code.
#define EMIT(frmt, ...) fprintf(m_file, frmt "\n", ##__VA_ARGS__)

CodeGen::
CodeGen()
{
}

CodeGen::
~CodeGen()
{
}

bool
CodeGen::
run(File& f, AST& ast)
{
    debug(Dbg::L0, "Run code generation\n");

    assert(f.isOpen());
    assert(ast.token.type == AST::Token::TOKEN_NIL);

    m_file.assign(f);

    EMIT(";Generated by Halo compiler\n\n");

    EMIT(";define main entry point");
    EMIT("define i32 @main() {");
    EMIT("  ret i32 0; return from main");
    EMIT("}");

    m_gen.emit();

    m_file.release();

    return true;
}

