# Call this script from a build directory to automatically
# generate proxy Makefile that inlcudes Makefile from the source directory. 
#

USER=`id -un`
echo "User                       : $USER"

CWD=`pwd`
echo "Current working directory  : $CWD"

SOURCE_PATH="$(dirname ${BASH_SOURCE[0]})"
echo "Path to source files       : $SOURCE_PATH"

ABS_SOURCE_PATH=$(realpath $SOURCE_PATH)
echo "Abs path to source files   : $ABS_SOURCE_PATH"

command -v ruby >/dev/null 2>&1 || {
    echo >&2 "***Error: 'ruby' is required but it's not installed. Aborting."; exit 1;
}

command -v gem >/dev/null 2>&1 || {
    echo >&2 "***Error: 'gem' is required but it's not installed. Aborting."; exit 1;
}

echo "Ruby version               : `ruby --version`"
echo "Gem version                : `gem --version`"

if [ "`gem list -i middleman`" == "false" ]
then
    echo >&2 "***Error: Middleman gem is not installed. Do 'sudo gem install middleman'"
    echo "Note: you may need to install ruby-dev package, sudo apt-get install ruby-all-dev"
    exit 1
fi

MAKE_CONFIG="config.makefile"

MAKEFILE="Makefile"
echo "include $MAKE_CONFIG" > $MAKEFILE
echo "include $SOURCE_PATH/build/build.makefile" >> $MAKEFILE


echo "# Autogenerated MAKE configuration" > $MAKE_CONFIG
echo "SOURCE_PATH:=$SOURCE_PATH" >> $MAKE_CONFIG
echo "ABS_SOURCE_PATH:=$ABS_SOURCE_PATH" >> $MAKE_CONFIG

BUILD_DIR=$CWD
echo "BUILD_DIR:=$BUILD_DIR" >> $MAKE_CONFIG


USER_CONFIG="$USER.config.makefile"
if [ ! -f $USER_CONFIG ]; then
    echo "# Redefine MAKE variables here" > $USER_CONFIG
fi

# At last include custom configuration.
echo "-include $USER_CONFIG" >> $MAKE_CONFIG


echo DONE!
