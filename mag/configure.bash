# Call this script from a build directory to automatically
# generate proxy Makefile that inlcudes Makefile from the source directory. 
#

USER=`id -un`
echo "User                       : $USER"

CWD=`pwd`
echo "Current working directory  : $CWD"

SOURCE_PATH="$(dirname ${BASH_SOURCE[0]})"
echo "Path to source files       : $SOURCE_PATH"

ABS_SOURCE_PATH=$(realpath $SOURCE_PATH)
echo "Abs path to source files   : $ABS_SOURCE_PATH"

MAKE_CONFIG="config.makefile"

MAKEFILE="Makefile"
echo "include $MAKE_CONFIG" > $MAKEFILE
echo "include $SOURCE_PATH/Build.makefile" >> $MAKEFILE


echo "# Autogenerated MAKE configuration" > $MAKE_CONFIG
echo "SOURCE_PATH:=$SOURCE_PATH" >> $MAKE_CONFIG
echo "ABS_SOURCE_PATH:=$ABS_SOURCE_PATH" >> $MAKE_CONFIG

BUILD_DIR=$CWD
echo "BUILD_DIR:=$BUILD_DIR" >> $MAKE_CONFIG

#GCC_PATH=`which gcc`
#echo GCC=$GCC_PATH
#echo "GCC:=$GCC_PATH" >> $MAKE_CONFIG

USER_CONFIG="$USER.config.makefile"
if [ ! -f $USER_CONFIG ]; then
    echo "# Redefine MAKE variables here" > $USER_CONFIG
fi

# At last include custom configuration.
echo "-include $USER_CONFIG" >> $MAKE_CONFIG


echo DONE!
